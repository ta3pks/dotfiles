# A valid snippet should starts with:
#
#		snippet trigger_word [ "description" [ options ] ]
#
# and end with:
#
#		endsnippet
#
# Snippet options:
#
#		b - Beginning of line.
#		i - In-word expansion.
#		w - Word boundary.
#		r - Regular expression
#		e - Custom context snippet
#		A - Snippet will be triggered automatically, when condition matches.
#
# Basic example:
#
#		snippet emitter "emitter properties" b
#		private readonly ${1} = new Emitter<$2>()
#		public readonly ${1/^_(.*)/$1/}: Event<$2> = this.$1.event
#		endsnippet
#
# Online reference: https://github.com/SirVer/ultisnips/blob/master/doc/UltiSnips.txt

snippet todo "todo" b

TODO: $1

endsnippet

snippet rustmake "common makefile for rust projects" b
CARGO_TARGET_DIR?=target
SRC=$(shell find . -name "*.rs" -or -name "*.toml")
SSH=${1:ssh_host}
export X86_64_UNKNOWN_LINUX_GNU_OPENSSL_DIR?=$(HOME)/.x86_64-unknown-linux-gnu-openssl
TARGET=x86_64-unknown-linux-gnu
.PHONY: deploy deployService logs restart stop

/tmp/openssl.tar.gz:
curl https://github.com/ta3pks/openssl_prebuilt/raw/main/aarch64-apple-darwin-x86_64-linux-openssl.tar.gz -Lo $@

	$(X86_64_UNKNOWN_LINUX_GNU_OPENSSL_DIR): /tmp/openssl.tar.gz
	mkdir -p $(X86_64_UNKNOWN_LINUX_GNU_OPENSSL_DIR)
	tar -xzf $< -C $(X86_64_UNKNOWN_LINUX_GNU_OPENSSL_DIR) 


	$(CARGO_TARGET_DIR)/$(TARGET)/release/${2:app_name}: $(SRC) $(X86_64_UNKNOWN_LINUX_GNU_OPENSSL_DIR)
cargo build --release --target=$(TARGET)

	deploy: $(CARGO_TARGET_DIR)/$(TARGET)/release/${2:app_name}
	rsync -vahurz --progress $< $(SSH):/usr/local/bin/

	deployService: ${2:app_name}.service
	rsync -vahurz --progress $< $(SSH):/etc/systemd/system/
	ssh $(SSH) systemctl daemon-reload
	ssh $(SSH) systemctl enable ${2:app_name}
	ssh $(SSH) systemctl start ${2:app_name}
	ssh $(SSH) systemctl status ${2:app_name}
restart:
	ssh $(SSH) systemctl restart ${2:app_name}
stop:
	ssh $(SSH) systemctl stop ${2:app_name}
logs:
	ssh $(SSH) journalctl -u ${2:app_name} -f
serverBinaryVersion:
	ssh $(SSH) /usr/local/bin/${2:app_name} --version
endsnippet
snippet service_file "systemd service file" b
[Unit]
Description=${1:app_name}
After=network.target

[Service]
ExecStart=/usr/local/bin/${1:app_name}
Restart=always
RestartSec=3
LimitNOFILE=999999

[Install]
WantedBy=multi-user.target
endsnippet

snippet -[] "mdtodo" b
- [ ] $1
endsnippet
