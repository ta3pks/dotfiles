complete -c elm-json -n "__fish_use_subcommand" -s v -l verbose -d 'Sets the level of verbosity'
complete -c elm-json -n "__fish_use_subcommand" -s h -l help -d 'Prints help information'
complete -c elm-json -n "__fish_use_subcommand" -s V -l version -d 'Prints version information'
complete -c elm-json -n "__fish_use_subcommand" -f -a "upgrade" -d 'Bring your dependencies up to date'
complete -c elm-json -n "__fish_use_subcommand" -f -a "install" -d 'Install a package'
complete -c elm-json -n "__fish_use_subcommand" -f -a "uninstall" -d 'Uninstall a package'
complete -c elm-json -n "__fish_use_subcommand" -f -a "tree" -d 'List entire dependency graph as a tree'
complete -c elm-json -n "__fish_use_subcommand" -f -a "solve" -d 'Figure out a solution given the version constraints in your elm.json'
complete -c elm-json -n "__fish_use_subcommand" -f -a "completions" -d 'Generates completion scripts for your shell'
complete -c elm-json -n "__fish_use_subcommand" -f -a "new" -d 'Create a new elm.json file'
complete -c elm-json -n "__fish_use_subcommand" -f -a "help" -d 'Prints this message or the help of the given subcommand(s)'
complete -c elm-json -n "__fish_seen_subcommand_from upgrade" -l unsafe -d 'Allow major versions bumps'
complete -c elm-json -n "__fish_seen_subcommand_from upgrade" -l yes -d 'Answer "yes" to all questions'
complete -c elm-json -n "__fish_seen_subcommand_from upgrade" -s h -l help -d 'Prints help information'
complete -c elm-json -n "__fish_seen_subcommand_from upgrade" -s V -l version -d 'Prints version information'
complete -c elm-json -n "__fish_seen_subcommand_from install" -l test -d 'Install as a test-dependency'
complete -c elm-json -n "__fish_seen_subcommand_from install" -l yes -d 'Answer "yes" to all questions'
complete -c elm-json -n "__fish_seen_subcommand_from install" -s h -l help -d 'Prints help information'
complete -c elm-json -n "__fish_seen_subcommand_from install" -s V -l version -d 'Prints version information'
complete -c elm-json -n "__fish_seen_subcommand_from uninstall" -l yes -d 'Answer "yes" to all questions'
complete -c elm-json -n "__fish_seen_subcommand_from uninstall" -s h -l help -d 'Prints help information'
complete -c elm-json -n "__fish_seen_subcommand_from uninstall" -s V -l version -d 'Prints version information'
complete -c elm-json -n "__fish_seen_subcommand_from tree" -l test -d 'Promote test-dependencies to top-level dependencies'
complete -c elm-json -n "__fish_seen_subcommand_from tree" -s h -l help -d 'Prints help information'
complete -c elm-json -n "__fish_seen_subcommand_from tree" -s V -l version -d 'Prints version information'
complete -c elm-json -n "__fish_seen_subcommand_from solve" -s e -l extra -d 'Specify extra dependencies, e.g. elm/core or elm/core@1.0.2'
complete -c elm-json -n "__fish_seen_subcommand_from solve" -l test -d 'Promote test-dependencies to top-level dependencies'
complete -c elm-json -n "__fish_seen_subcommand_from solve" -s m -l minimize -d 'Choose lowest available versions rather than highest'
complete -c elm-json -n "__fish_seen_subcommand_from solve" -s h -l help -d 'Prints help information'
complete -c elm-json -n "__fish_seen_subcommand_from solve" -s V -l version -d 'Prints version information'
complete -c elm-json -n "__fish_seen_subcommand_from completions" -s h -l help -d 'Prints help information'
complete -c elm-json -n "__fish_seen_subcommand_from completions" -s V -l version -d 'Prints version information'
complete -c elm-json -n "__fish_seen_subcommand_from new" -s h -l help -d 'Prints help information'
complete -c elm-json -n "__fish_seen_subcommand_from new" -s V -l version -d 'Prints version information'
complete -c elm-json -n "__fish_seen_subcommand_from help" -s h -l help -d 'Prints help information'
complete -c elm-json -n "__fish_seen_subcommand_from help" -s V -l version -d 'Prints version information'
